{"setup": [], "q1": {"sql": "\nSELECT \n    COUNT(*) AS total_records, \n    COUNT(rating) AS non_null_ratings\nFROM \n    tRating;\n"}, "q2": {"sql": "\nSELECT \n    COUNT(DISTINCT date_entered) AS unique_dates\nFROM \n    tRating;\n"}, "q3": {"sql": "\nSELECT \n    s.artist, \n    s.track, \n    r.date_entered, \n    r.rating AS rating\nFROM \n    tRating r\nJOIN \n    tSong s ON r.song_id = s.song_id\nWHERE \n    r.date_entered = (SELECT MIN(date_entered) FROM tRating)\nORDER BY \n    r.song_id ASC;\n"}, "q4": {"sql": "\nSELECT \n    s.artist, \n    s.track, \n    AVG(r.rating) AS average_rating\nFROM \n    tRating r\nJOIN \n    tSong s ON r.song_id = s.song_id\nWHERE \n    r.song_id NOT IN (\n        SELECT song_id\n        FROM tRating\n        WHERE rating < 50\n    )\nGROUP BY \n    r.song_id\nORDER BY \n    r.song_id ASC;\n"}, "q5": {"sql": "\nWITH TopN AS (\n    SELECT artist\n    FROM tSong\n    GROUP BY artist\n    HAVING COUNT(song_id) > 3\n)\nSELECT s.artist, s.track\nFROM tSong s\nJOIN TopN AS multiple_songs ON s.artist = multiple_songs.artist\nORDER BY s.artist ASC, s.track ASC;\n"}, "q6": {"sql": "\nSELECT s.artist, s.track, COUNT(r.week) AS number_of_weeks\nFROM tSong s\nJOIN tRating r ON s.song_id = r.song_id\nWHERE r.rating IS NOT NULL\nGROUP BY s.song_id\nORDER BY s.song_id ASC;\n"}, "q7": {"sql": "\nSELECT s.artist, s.track, r.week, r.rating\nFROM tSong s\nJOIN tRating r ON s.song_id = r.song_id\nWHERE s.song_id IN (\n    SELECT song_id\n    FROM tRating\n    WHERE rating IS NOT NULL\n    GROUP BY song_id\n    HAVING COUNT(rating) = 1\n) AND r.rating IS NOT NULL\nORDER BY s.song_id ASC;\n"}, "q8": {"sql": "\nWITH SongWeeks AS (\n    SELECT s.song_id, s.artist, s.track, COUNT(r.week) AS num_weeks\n    FROM tSong s\n    JOIN tRating r ON s.song_id = r.song_id\n    WHERE r.rating IS NOT NULL\n    GROUP BY s.song_id\n)\nSELECT artist, track, num_weeks\nFROM SongWeeks\nWHERE num_weeks = (SELECT MAX(num_weeks) FROM SongWeeks)\nORDER BY song_id ASC;\n"}, "q9": {"sql": "\nSELECT s.artist, s.track, \n       COUNT(r.rating) AS non_null_ratings, \n       MAX(r.week) AS max_week_with_rating\nFROM tSong s\nJOIN tRating r ON s.song_id = r.song_id\nWHERE r.rating IS NOT NULL\nGROUP BY s.song_id\nORDER BY s.song_id ASC;\n"}}